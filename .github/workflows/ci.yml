name: CI

on:
  push:
    branches: [ master, dev ]
  pull_request:
    branches: [ master, dev ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn --frozen-lockfile
      - run: yarn lint
      
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn --frozen-lockfile
      - run: yarn build
  
  deploy:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    needs:
      - lint
      - build
    env:
      RESOURCE_NAME: ${{ github.ref == 'refs/heads/master' && 'front-prod' || 'front-dev' }}
    steps:
      - uses: actions/checkout@v2
      - uses: docker/setup-buildx-action@v1
      - uses: actions/cache@v2
        with:
          path: /tmp/.docker-cache
          key: ${{ runner.os }}-docker-${{ hashFiles('**/yarn.lock') }}
      - uses: docker/login-action@v1
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ci
          password: ${{ secrets.REGISTRY_TOKEN }}
      - uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.REGISTRY_URL }}/${{ secrets.REGISTRY_NAMESPACE }}/${{ env.RESOURCE_NAME }}
          cache-from: type=local,src=/tmp/.docker-cache
          cache-to: type=local,dest=/tmp/.docker-cache
      - uses: lazy-actions/slatify@master
        if: always()
        with:
          type: ${{ job.status }}
          job_name: '*Deployment to ${{ env.RESOURCE_NAME }}*'
          commit: true
          url: ${{ secrets.SLACK_WEBHOOK_URL }}